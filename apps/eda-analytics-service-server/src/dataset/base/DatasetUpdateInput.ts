/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AnalysisUpdateManyWithoutDatasetsInput } from "./AnalysisUpdateManyWithoutDatasetsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsEnum,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { ReportUpdateManyWithoutDatasetsInput } from "./ReportUpdateManyWithoutDatasetsInput";
import { EnumDatasetStatus } from "./EnumDatasetStatus";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class DatasetUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AnalysisUpdateManyWithoutDatasetsInput,
  })
  @ValidateNested()
  @Type(() => AnalysisUpdateManyWithoutDatasetsInput)
  @IsOptional()
  @Field(() => AnalysisUpdateManyWithoutDatasetsInput, {
    nullable: true,
  })
  analyses?: AnalysisUpdateManyWithoutDatasetsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReportUpdateManyWithoutDatasetsInput,
  })
  @ValidateNested()
  @Type(() => ReportUpdateManyWithoutDatasetsInput)
  @IsOptional()
  @Field(() => ReportUpdateManyWithoutDatasetsInput, {
    nullable: true,
  })
  reports?: ReportUpdateManyWithoutDatasetsInput;

  @ApiProperty({
    required: false,
    enum: EnumDatasetStatus,
  })
  @IsEnum(EnumDatasetStatus)
  @IsOptional()
  @Field(() => EnumDatasetStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  uploadedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { DatasetUpdateInput as DatasetUpdateInput };
